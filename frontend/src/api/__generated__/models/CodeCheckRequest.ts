/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 인증코드 검증 요청
 * @export
 * @interface CodeCheckRequest
 */
export interface CodeCheckRequest {
    /**
     * 이메일 주소
     * @type {string}
     * @memberof CodeCheckRequest
     */
    email: string;
    /**
     * 인증코드
     * @type {string}
     * @memberof CodeCheckRequest
     */
    code: string;
    /**
     * 코드 타입 (SIGNUP 또는 RESET_PASSWORD)
     * @type {string}
     * @memberof CodeCheckRequest
     */
    type: CodeCheckRequestTypeEnum;
}


/**
 * @export
 */
export const CodeCheckRequestTypeEnum = {
    Signup: 'SIGNUP',
    ResetPassword: 'RESET_PASSWORD'
} as const;
export type CodeCheckRequestTypeEnum = typeof CodeCheckRequestTypeEnum[keyof typeof CodeCheckRequestTypeEnum];


/**
 * Check if a given object implements the CodeCheckRequest interface.
 */
export function instanceOfCodeCheckRequest(value: object): value is CodeCheckRequest {
    if (!('email' in value) || value['email'] === undefined) return false;
    if (!('code' in value) || value['code'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    return true;
}

export function CodeCheckRequestFromJSON(json: any): CodeCheckRequest {
    return CodeCheckRequestFromJSONTyped(json, false);
}

export function CodeCheckRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CodeCheckRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'email': json['email'],
        'code': json['code'],
        'type': json['type'],
    };
}

export function CodeCheckRequestToJSON(json: any): CodeCheckRequest {
    return CodeCheckRequestToJSONTyped(json, false);
}

export function CodeCheckRequestToJSONTyped(value?: CodeCheckRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'email': value['email'],
        'code': value['code'],
        'type': value['type'],
    };
}

