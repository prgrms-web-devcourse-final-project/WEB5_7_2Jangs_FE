/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProblemDetail } from './ProblemDetail';
import {
    ProblemDetailFromJSON,
    ProblemDetailFromJSONTyped,
    ProblemDetailToJSON,
    ProblemDetailToJSONTyped,
} from './ProblemDetail';
import type { ErrorResponseStatusCode } from './ErrorResponseStatusCode';
import {
    ErrorResponseStatusCodeFromJSON,
    ErrorResponseStatusCodeFromJSONTyped,
    ErrorResponseStatusCodeToJSON,
    ErrorResponseStatusCodeToJSONTyped,
} from './ErrorResponseStatusCode';
import type { ErrorResponseHeaders } from './ErrorResponseHeaders';
import {
    ErrorResponseHeadersFromJSON,
    ErrorResponseHeadersFromJSONTyped,
    ErrorResponseHeadersToJSON,
    ErrorResponseHeadersToJSONTyped,
} from './ErrorResponseHeaders';

/**
 * 
 * @export
 * @interface ErrorResponse
 */
export interface ErrorResponse {
    /**
     * 
     * @type {ProblemDetail}
     * @memberof ErrorResponse
     */
    body?: ProblemDetail;
    /**
     * 
     * @type {ErrorResponseStatusCode}
     * @memberof ErrorResponse
     */
    statusCode?: ErrorResponseStatusCode;
    /**
     * 
     * @type {Array<any>}
     * @memberof ErrorResponse
     */
    detailMessageArguments?: Array<any>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponse
     */
    typeMessageCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponse
     */
    detailMessageCode?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponse
     */
    titleMessageCode?: string;
    /**
     * 
     * @type {ErrorResponseHeaders}
     * @memberof ErrorResponse
     */
    headers?: ErrorResponseHeaders;
}

/**
 * Check if a given object implements the ErrorResponse interface.
 */
export function instanceOfErrorResponse(value: object): value is ErrorResponse {
    return true;
}

export function ErrorResponseFromJSON(json: any): ErrorResponse {
    return ErrorResponseFromJSONTyped(json, false);
}

export function ErrorResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'body': json['body'] == null ? undefined : ProblemDetailFromJSON(json['body']),
        'statusCode': json['statusCode'] == null ? undefined : ErrorResponseStatusCodeFromJSON(json['statusCode']),
        'detailMessageArguments': json['detailMessageArguments'] == null ? undefined : json['detailMessageArguments'],
        'typeMessageCode': json['typeMessageCode'] == null ? undefined : json['typeMessageCode'],
        'detailMessageCode': json['detailMessageCode'] == null ? undefined : json['detailMessageCode'],
        'titleMessageCode': json['titleMessageCode'] == null ? undefined : json['titleMessageCode'],
        'headers': json['headers'] == null ? undefined : ErrorResponseHeadersFromJSON(json['headers']),
    };
}

export function ErrorResponseToJSON(json: any): ErrorResponse {
    return ErrorResponseToJSONTyped(json, false);
}

export function ErrorResponseToJSONTyped(value?: ErrorResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'body': ProblemDetailToJSON(value['body']),
        'statusCode': ErrorResponseStatusCodeToJSON(value['statusCode']),
        'detailMessageArguments': value['detailMessageArguments'],
        'typeMessageCode': value['typeMessageCode'],
        'detailMessageCode': value['detailMessageCode'],
        'titleMessageCode': value['titleMessageCode'],
        'headers': ErrorResponseHeadersToJSON(value['headers']),
    };
}

