/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ErrorResponseHeadersHostAddress
 */
export interface ErrorResponseHeadersHostAddress {
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeadersHostAddress
     */
    hostAddress?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeadersHostAddress
     */
    address?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeadersHostAddress
     */
    hostName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    linkLocalAddress?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    multicastAddress?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    anyLocalAddress?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    loopbackAddress?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    siteLocalAddress?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    mcglobal?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    mcnodeLocal?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    mclinkLocal?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    mcsiteLocal?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeadersHostAddress
     */
    mcorgLocal?: boolean;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeadersHostAddress
     */
    canonicalHostName?: string;
}

/**
 * Check if a given object implements the ErrorResponseHeadersHostAddress interface.
 */
export function instanceOfErrorResponseHeadersHostAddress(value: object): value is ErrorResponseHeadersHostAddress {
    return true;
}

export function ErrorResponseHeadersHostAddressFromJSON(json: any): ErrorResponseHeadersHostAddress {
    return ErrorResponseHeadersHostAddressFromJSONTyped(json, false);
}

export function ErrorResponseHeadersHostAddressFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseHeadersHostAddress {
    if (json == null) {
        return json;
    }
    return {
        
        'hostAddress': json['hostAddress'] == null ? undefined : json['hostAddress'],
        'address': json['address'] == null ? undefined : json['address'],
        'hostName': json['hostName'] == null ? undefined : json['hostName'],
        'linkLocalAddress': json['linkLocalAddress'] == null ? undefined : json['linkLocalAddress'],
        'multicastAddress': json['multicastAddress'] == null ? undefined : json['multicastAddress'],
        'anyLocalAddress': json['anyLocalAddress'] == null ? undefined : json['anyLocalAddress'],
        'loopbackAddress': json['loopbackAddress'] == null ? undefined : json['loopbackAddress'],
        'siteLocalAddress': json['siteLocalAddress'] == null ? undefined : json['siteLocalAddress'],
        'mcglobal': json['mcglobal'] == null ? undefined : json['mcglobal'],
        'mcnodeLocal': json['mcnodeLocal'] == null ? undefined : json['mcnodeLocal'],
        'mclinkLocal': json['mclinkLocal'] == null ? undefined : json['mclinkLocal'],
        'mcsiteLocal': json['mcsiteLocal'] == null ? undefined : json['mcsiteLocal'],
        'mcorgLocal': json['mcorgLocal'] == null ? undefined : json['mcorgLocal'],
        'canonicalHostName': json['canonicalHostName'] == null ? undefined : json['canonicalHostName'],
    };
}

export function ErrorResponseHeadersHostAddressToJSON(json: any): ErrorResponseHeadersHostAddress {
    return ErrorResponseHeadersHostAddressToJSONTyped(json, false);
}

export function ErrorResponseHeadersHostAddressToJSONTyped(value?: ErrorResponseHeadersHostAddress | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'hostAddress': value['hostAddress'],
        'address': value['address'],
        'hostName': value['hostName'],
        'linkLocalAddress': value['linkLocalAddress'],
        'multicastAddress': value['multicastAddress'],
        'anyLocalAddress': value['anyLocalAddress'],
        'loopbackAddress': value['loopbackAddress'],
        'siteLocalAddress': value['siteLocalAddress'],
        'mcglobal': value['mcglobal'],
        'mcnodeLocal': value['mcnodeLocal'],
        'mclinkLocal': value['mclinkLocal'],
        'mcsiteLocal': value['mcsiteLocal'],
        'mcorgLocal': value['mcorgLocal'],
        'canonicalHostName': value['canonicalHostName'],
    };
}

