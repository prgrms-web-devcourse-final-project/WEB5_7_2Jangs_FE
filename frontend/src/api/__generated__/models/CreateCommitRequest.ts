/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { BlockDto } from './BlockDto';
import {
    BlockDtoFromJSON,
    BlockDtoFromJSONTyped,
    BlockDtoToJSON,
    BlockDtoToJSONTyped,
} from './BlockDto';

/**
 * 
 * @export
 * @interface CreateCommitRequest
 */
export interface CreateCommitRequest {
    /**
     * 
     * @type {string}
     * @memberof CreateCommitRequest
     */
    title: string;
    /**
     * 
     * @type {string}
     * @memberof CreateCommitRequest
     */
    description?: string;
    /**
     * 
     * @type {number}
     * @memberof CreateCommitRequest
     */
    branchId?: number;
    /**
     * 
     * @type {Array<BlockDto>}
     * @memberof CreateCommitRequest
     */
    blocks?: Array<BlockDto>;
    /**
     * 
     * @type {Array<string>}
     * @memberof CreateCommitRequest
     */
    blockOrders?: Array<string>;
}

/**
 * Check if a given object implements the CreateCommitRequest interface.
 */
export function instanceOfCreateCommitRequest(value: object): value is CreateCommitRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    return true;
}

export function CreateCommitRequestFromJSON(json: any): CreateCommitRequest {
    return CreateCommitRequestFromJSONTyped(json, false);
}

export function CreateCommitRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateCommitRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'branchId': json['branchId'] == null ? undefined : json['branchId'],
        'blocks': json['blocks'] == null ? undefined : ((json['blocks'] as Array<any>).map(BlockDtoFromJSON)),
        'blockOrders': json['blockOrders'] == null ? undefined : json['blockOrders'],
    };
}

export function CreateCommitRequestToJSON(json: any): CreateCommitRequest {
    return CreateCommitRequestToJSONTyped(json, false);
}

export function CreateCommitRequestToJSONTyped(value?: CreateCommitRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'description': value['description'],
        'branchId': value['branchId'],
        'blocks': value['blocks'] == null ? undefined : ((value['blocks'] as Array<any>).map(BlockDtoToJSON)),
        'blockOrders': value['blockOrders'],
    };
}

