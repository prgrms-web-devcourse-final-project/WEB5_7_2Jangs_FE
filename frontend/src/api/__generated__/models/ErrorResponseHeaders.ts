/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ContentDisposition } from './ContentDisposition';
import {
    ContentDispositionFromJSON,
    ContentDispositionFromJSONTyped,
    ContentDispositionToJSON,
    ContentDispositionToJSONTyped,
} from './ContentDisposition';
import type { ErrorResponseHeadersAcceptLanguageInner } from './ErrorResponseHeadersAcceptLanguageInner';
import {
    ErrorResponseHeadersAcceptLanguageInnerFromJSON,
    ErrorResponseHeadersAcceptLanguageInnerFromJSONTyped,
    ErrorResponseHeadersAcceptLanguageInnerToJSON,
    ErrorResponseHeadersAcceptLanguageInnerToJSONTyped,
} from './ErrorResponseHeadersAcceptLanguageInner';
import type { MediaType } from './MediaType';
import {
    MediaTypeFromJSON,
    MediaTypeFromJSONTyped,
    MediaTypeToJSON,
    MediaTypeToJSONTyped,
} from './MediaType';
import type { ErrorResponseHeadersHost } from './ErrorResponseHeadersHost';
import {
    ErrorResponseHeadersHostFromJSON,
    ErrorResponseHeadersHostFromJSONTyped,
    ErrorResponseHeadersHostToJSON,
    ErrorResponseHeadersHostToJSONTyped,
} from './ErrorResponseHeadersHost';

/**
 * 
 * @export
 * @interface ErrorResponseHeaders
 */
export interface ErrorResponseHeaders {
    [key: string]: Array<string> | any;
    /**
     * 
     * @type {ContentDisposition}
     * @memberof ErrorResponseHeaders
     */
    contentDisposition?: ContentDisposition;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    acceptCharset?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    location?: string;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeaders
     */
    empty?: boolean;
    /**
     * 
     * @type {ErrorResponseHeadersHost}
     * @memberof ErrorResponseHeaders
     */
    host?: ErrorResponseHeadersHost;
    /**
     * 
     * @type {{ [key: string]: string; }}
     * @memberof ErrorResponseHeaders
     */
    all?: { [key: string]: string; };
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    lastModified?: number;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    date?: number;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    contentLength?: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    origin?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    etag?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof ErrorResponseHeaders
     */
    range?: Array<any>;
    /**
     * 
     * @type {MediaType}
     * @memberof ErrorResponseHeaders
     */
    contentType?: MediaType;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    connection?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    contentLanguage?: string;
    /**
     * 
     * @type {Set<any>}
     * @memberof ErrorResponseHeaders
     */
    allow?: Set<any>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    cacheControl?: string;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    accessControlMaxAge?: number;
    /**
     * 
     * @type {any}
     * @memberof ErrorResponseHeaders
     */
    accessControlRequestMethod?: any | null;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    accessControlRequestHeaders?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    accessControlAllowOrigin?: string;
    /**
     * 
     * @type {Array<any>}
     * @memberof ErrorResponseHeaders
     */
    accessControlAllowMethods?: Array<any>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    accessControlAllowHeaders?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    accessControlExposeHeaders?: Array<string>;
    /**
     * 
     * @type {boolean}
     * @memberof ErrorResponseHeaders
     */
    accessControlAllowCredentials?: boolean;
    /**
     * 
     * @type {Array<MediaType>}
     * @memberof ErrorResponseHeaders
     */
    accept?: Array<MediaType>;
    /**
     * 
     * @type {Array<MediaType>}
     * @memberof ErrorResponseHeaders
     */
    acceptPatch?: Array<MediaType>;
    /**
     * 
     * @type {Array<ErrorResponseHeadersAcceptLanguageInner>}
     * @memberof ErrorResponseHeaders
     */
    acceptLanguage?: Array<ErrorResponseHeadersAcceptLanguageInner>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    basicAuth?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    acceptLanguageAsLocales?: Array<string>;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    bearerAuth?: string;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    expires?: number;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    ifMatch?: Array<string>;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    ifNoneMatch?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    ifUnmodifiedSince?: number;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    pragma?: string;
    /**
     * 
     * @type {string}
     * @memberof ErrorResponseHeaders
     */
    upgrade?: string;
    /**
     * 
     * @type {Array<string>}
     * @memberof ErrorResponseHeaders
     */
    vary?: Array<string>;
    /**
     * 
     * @type {number}
     * @memberof ErrorResponseHeaders
     */
    ifModifiedSince?: number;
}

/**
 * Check if a given object implements the ErrorResponseHeaders interface.
 */
export function instanceOfErrorResponseHeaders(value: object): value is ErrorResponseHeaders {
    return true;
}

export function ErrorResponseHeadersFromJSON(json: any): ErrorResponseHeaders {
    return ErrorResponseHeadersFromJSONTyped(json, false);
}

export function ErrorResponseHeadersFromJSONTyped(json: any, ignoreDiscriminator: boolean): ErrorResponseHeaders {
    if (json == null) {
        return json;
    }
    return {
        
            ...json,
        'contentDisposition': json['contentDisposition'] == null ? undefined : ContentDispositionFromJSON(json['contentDisposition']),
        'acceptCharset': json['acceptCharset'] == null ? undefined : json['acceptCharset'],
        'location': json['location'] == null ? undefined : json['location'],
        'empty': json['empty'] == null ? undefined : json['empty'],
        'host': json['host'] == null ? undefined : ErrorResponseHeadersHostFromJSON(json['host']),
        'all': json['all'] == null ? undefined : json['all'],
        'lastModified': json['lastModified'] == null ? undefined : json['lastModified'],
        'date': json['date'] == null ? undefined : json['date'],
        'contentLength': json['contentLength'] == null ? undefined : json['contentLength'],
        'origin': json['origin'] == null ? undefined : json['origin'],
        'etag': json['etag'] == null ? undefined : json['etag'],
        'range': json['range'] == null ? undefined : json['range'],
        'contentType': json['contentType'] == null ? undefined : MediaTypeFromJSON(json['contentType']),
        'connection': json['connection'] == null ? undefined : json['connection'],
        'contentLanguage': json['contentLanguage'] == null ? undefined : json['contentLanguage'],
        'allow': json['allow'] == null ? undefined : new Set(json['allow']),
        'cacheControl': json['cacheControl'] == null ? undefined : json['cacheControl'],
        'accessControlMaxAge': json['accessControlMaxAge'] == null ? undefined : json['accessControlMaxAge'],
        'accessControlRequestMethod': json['accessControlRequestMethod'] == null ? undefined : json['accessControlRequestMethod'],
        'accessControlRequestHeaders': json['accessControlRequestHeaders'] == null ? undefined : json['accessControlRequestHeaders'],
        'accessControlAllowOrigin': json['accessControlAllowOrigin'] == null ? undefined : json['accessControlAllowOrigin'],
        'accessControlAllowMethods': json['accessControlAllowMethods'] == null ? undefined : json['accessControlAllowMethods'],
        'accessControlAllowHeaders': json['accessControlAllowHeaders'] == null ? undefined : json['accessControlAllowHeaders'],
        'accessControlExposeHeaders': json['accessControlExposeHeaders'] == null ? undefined : json['accessControlExposeHeaders'],
        'accessControlAllowCredentials': json['accessControlAllowCredentials'] == null ? undefined : json['accessControlAllowCredentials'],
        'accept': json['accept'] == null ? undefined : ((json['accept'] as Array<any>).map(MediaTypeFromJSON)),
        'acceptPatch': json['acceptPatch'] == null ? undefined : ((json['acceptPatch'] as Array<any>).map(MediaTypeFromJSON)),
        'acceptLanguage': json['acceptLanguage'] == null ? undefined : ((json['acceptLanguage'] as Array<any>).map(ErrorResponseHeadersAcceptLanguageInnerFromJSON)),
        'basicAuth': json['basicAuth'] == null ? undefined : json['basicAuth'],
        'acceptLanguageAsLocales': json['acceptLanguageAsLocales'] == null ? undefined : json['acceptLanguageAsLocales'],
        'bearerAuth': json['bearerAuth'] == null ? undefined : json['bearerAuth'],
        'expires': json['expires'] == null ? undefined : json['expires'],
        'ifMatch': json['ifMatch'] == null ? undefined : json['ifMatch'],
        'ifNoneMatch': json['ifNoneMatch'] == null ? undefined : json['ifNoneMatch'],
        'ifUnmodifiedSince': json['ifUnmodifiedSince'] == null ? undefined : json['ifUnmodifiedSince'],
        'pragma': json['pragma'] == null ? undefined : json['pragma'],
        'upgrade': json['upgrade'] == null ? undefined : json['upgrade'],
        'vary': json['vary'] == null ? undefined : json['vary'],
        'ifModifiedSince': json['ifModifiedSince'] == null ? undefined : json['ifModifiedSince'],
    };
}

export function ErrorResponseHeadersToJSON(json: any): ErrorResponseHeaders {
    return ErrorResponseHeadersToJSONTyped(json, false);
}

export function ErrorResponseHeadersToJSONTyped(value?: ErrorResponseHeaders | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
            ...value,
        'contentDisposition': ContentDispositionToJSON(value['contentDisposition']),
        'acceptCharset': value['acceptCharset'],
        'location': value['location'],
        'empty': value['empty'],
        'host': ErrorResponseHeadersHostToJSON(value['host']),
        'all': value['all'],
        'lastModified': value['lastModified'],
        'date': value['date'],
        'contentLength': value['contentLength'],
        'origin': value['origin'],
        'etag': value['etag'],
        'range': value['range'],
        'contentType': MediaTypeToJSON(value['contentType']),
        'connection': value['connection'],
        'contentLanguage': value['contentLanguage'],
        'allow': value['allow'] == null ? undefined : Array.from(value['allow'] as Set<any>),
        'cacheControl': value['cacheControl'],
        'accessControlMaxAge': value['accessControlMaxAge'],
        'accessControlRequestMethod': value['accessControlRequestMethod'],
        'accessControlRequestHeaders': value['accessControlRequestHeaders'],
        'accessControlAllowOrigin': value['accessControlAllowOrigin'],
        'accessControlAllowMethods': value['accessControlAllowMethods'],
        'accessControlAllowHeaders': value['accessControlAllowHeaders'],
        'accessControlExposeHeaders': value['accessControlExposeHeaders'],
        'accessControlAllowCredentials': value['accessControlAllowCredentials'],
        'accept': value['accept'] == null ? undefined : ((value['accept'] as Array<any>).map(MediaTypeToJSON)),
        'acceptPatch': value['acceptPatch'] == null ? undefined : ((value['acceptPatch'] as Array<any>).map(MediaTypeToJSON)),
        'acceptLanguage': value['acceptLanguage'] == null ? undefined : ((value['acceptLanguage'] as Array<any>).map(ErrorResponseHeadersAcceptLanguageInnerToJSON)),
        'basicAuth': value['basicAuth'],
        'acceptLanguageAsLocales': value['acceptLanguageAsLocales'],
        'bearerAuth': value['bearerAuth'],
        'expires': value['expires'],
        'ifMatch': value['ifMatch'],
        'ifNoneMatch': value['ifNoneMatch'],
        'ifUnmodifiedSince': value['ifUnmodifiedSince'],
        'pragma': value['pragma'],
        'upgrade': value['upgrade'],
        'vary': value['vary'],
        'ifModifiedSince': value['ifModifiedSince'],
    };
}

