/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GraphCommitDto
 */
export interface GraphCommitDto {
    /**
     * 
     * @type {number}
     * @memberof GraphCommitDto
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof GraphCommitDto
     */
    branchId?: number;
    /**
     * 
     * @type {string}
     * @memberof GraphCommitDto
     */
    title?: string;
    /**
     * 
     * @type {string}
     * @memberof GraphCommitDto
     */
    description?: string;
    /**
     * 
     * @type {Date}
     * @memberof GraphCommitDto
     */
    createdAt?: Date;
}

/**
 * Check if a given object implements the GraphCommitDto interface.
 */
export function instanceOfGraphCommitDto(value: object): value is GraphCommitDto {
    return true;
}

export function GraphCommitDtoFromJSON(json: any): GraphCommitDto {
    return GraphCommitDtoFromJSONTyped(json, false);
}

export function GraphCommitDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GraphCommitDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'branchId': json['branchId'] == null ? undefined : json['branchId'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'createdAt': json['createdAt'] == null ? undefined : (new Date(json['createdAt'])),
    };
}

export function GraphCommitDtoToJSON(json: any): GraphCommitDto {
    return GraphCommitDtoToJSONTyped(json, false);
}

export function GraphCommitDtoToJSONTyped(value?: GraphCommitDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'branchId': value['branchId'],
        'title': value['title'],
        'description': value['description'],
        'createdAt': value['createdAt'] == null ? undefined : ((value['createdAt']).toISOString()),
    };
}

