/* tslint:disable */
/* eslint-disable */
/**
 * Docsa API
 * Docsa의 백엔드 API 명세입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { GraphBranchDto } from './GraphBranchDto';
import {
    GraphBranchDtoFromJSON,
    GraphBranchDtoFromJSONTyped,
    GraphBranchDtoToJSON,
    GraphBranchDtoToJSONTyped,
} from './GraphBranchDto';
import type { GraphCommitDto } from './GraphCommitDto';
import {
    GraphCommitDtoFromJSON,
    GraphCommitDtoFromJSONTyped,
    GraphCommitDtoToJSON,
    GraphCommitDtoToJSONTyped,
} from './GraphCommitDto';
import type { GraphEdgeDto } from './GraphEdgeDto';
import {
    GraphEdgeDtoFromJSON,
    GraphEdgeDtoFromJSONTyped,
    GraphEdgeDtoToJSON,
    GraphEdgeDtoToJSONTyped,
} from './GraphEdgeDto';

/**
 * 
 * @export
 * @interface CommitGraphResponse
 */
export interface CommitGraphResponse {
    /**
     * 
     * @type {string}
     * @memberof CommitGraphResponse
     */
    title?: string;
    /**
     * 
     * @type {Array<GraphCommitDto>}
     * @memberof CommitGraphResponse
     */
    commits?: Array<GraphCommitDto>;
    /**
     * 
     * @type {Array<GraphEdgeDto>}
     * @memberof CommitGraphResponse
     */
    edges?: Array<GraphEdgeDto>;
    /**
     * 
     * @type {Array<GraphBranchDto>}
     * @memberof CommitGraphResponse
     */
    branches?: Array<GraphBranchDto>;
}

/**
 * Check if a given object implements the CommitGraphResponse interface.
 */
export function instanceOfCommitGraphResponse(value: object): value is CommitGraphResponse {
    return true;
}

export function CommitGraphResponseFromJSON(json: any): CommitGraphResponse {
    return CommitGraphResponseFromJSONTyped(json, false);
}

export function CommitGraphResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CommitGraphResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : json['title'],
        'commits': json['commits'] == null ? undefined : ((json['commits'] as Array<any>).map(GraphCommitDtoFromJSON)),
        'edges': json['edges'] == null ? undefined : ((json['edges'] as Array<any>).map(GraphEdgeDtoFromJSON)),
        'branches': json['branches'] == null ? undefined : ((json['branches'] as Array<any>).map(GraphBranchDtoFromJSON)),
    };
}

export function CommitGraphResponseToJSON(json: any): CommitGraphResponse {
    return CommitGraphResponseToJSONTyped(json, false);
}

export function CommitGraphResponseToJSONTyped(value?: CommitGraphResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'],
        'commits': value['commits'] == null ? undefined : ((value['commits'] as Array<any>).map(GraphCommitDtoToJSON)),
        'edges': value['edges'] == null ? undefined : ((value['edges'] as Array<any>).map(GraphEdgeDtoToJSON)),
        'branches': value['branches'] == null ? undefined : ((value['branches'] as Array<any>).map(GraphBranchDtoToJSON)),
    };
}

